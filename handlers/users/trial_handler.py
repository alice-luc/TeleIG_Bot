from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command

from IgSide.Server.trial_bot import trial_purchase
from keyboards.default import start_menu_buttons
from states import TrialState
from loader import data_base, dispatcher
from utils.misc import rate_limit
from utils.notify_admins import membership_notify, errors_notify
import threading


@rate_limit(5, 'trial')
@dispatcher.message_handler(Command('trial'))
async def trial_go(message: types.Message):
    """
    starts trial 3 days version with the given data
    :param message:
    :return:
    """
    await TrialState.T1.set()
    await message.answer('ü•≥–î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±–Ω–æ–π 3—Ö-–¥–Ω–µ–≤–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –≤–≤–µ–¥–∏ —Å–≤–æ–π –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å. \n‚õîÔ∏è–î–∞–Ω–Ω—ã–µ –Ω–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ \
—Å–∏—Å—Ç–µ–º–µ. \n–ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ —Å–æ–≤–µ—Ç—É—é —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞—Ä–æ–ª–µ–º –≤ —Ü–µ–ª—è—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏')


@dispatcher.message_handler(state=TrialState.T1)
async def trial_start(message: types.Message, state: FSMContext):
    tg_id = message.from_user.id
    login, password = message.text.split(' ')
    await state.finish()
    if not data_base.trial_select_user(tg_id, login):
        await message.answer('‚úÖ–ü–æ–µ—Ö–∞–ª–∏ —Ä–∞–±–æ—Ç–∞—Ç—å!\n–í–µ—Ä–Ω—É—Å—å —á–µ—Ä–µ–∑ 3 –¥–Ω—è —Å –æ—Ç—á–µ—Ç–æ–º\nüòé')
        await membership_notify(dispatcher, login, tg_id)
        threading.Thread(target=trial_purchase, args=(login, password)).start()
    else:
        await message.answer('üòî–¢–≤–æ—è –ø—Ä–æ–±–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞, –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –æ–ø–ª–∞—Ç–∏ 15$ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ \n\
@alohayoung\n –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π –∏–ª–∏ –≥—Ä—É–ø–ø–æ–≤–æ–π —Å–∫–∏–¥–∫–∏üòâ')



